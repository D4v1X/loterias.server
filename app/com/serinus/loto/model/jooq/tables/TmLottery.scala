/**
 * This class is generated by jOOQ
 */
package com.serinus.loto.model.jooq.tables


import com.serinus.loto.model.converters.TimestampToLocalDateTimeConverter
import com.serinus.loto.model.jooq.Keys
import com.serinus.loto.model.jooq.LotterySchema
import com.serinus.loto.model.jooq.tables.records.TmLotteryRecord

import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.time.LocalDateTime
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Identity
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import scala.Array


object TmLottery {

  /**
   * The reference instance of <code>lottery_schema.tm_lottery</code>
   */
  val TM_LOTTERY = new TmLottery
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.6"
  ),
  comments = "This class is generated by jOOQ"
)
class TmLottery(alias : String, aliased : Table[TmLotteryRecord], parameters : Array[ Field[_] ]) extends TableImpl[TmLotteryRecord](alias, LotterySchema.LOTTERY_SCHEMA, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[TmLotteryRecord] = {
    classOf[TmLotteryRecord]
  }

  /**
   * The column <code>lottery_schema.tm_lottery.id</code>.
   */
  val ID : TableField[TmLotteryRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lottery_schema.tm_lottery_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), "")

  /**
   * The column <code>lottery_schema.tm_lottery.name</code>.
   */
  val NAME : TableField[TmLotteryRecord, String] = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), "")

  /**
   * The column <code>lottery_schema.tm_lottery.created</code>.
   */
  val CREATED : TableField[TmLotteryRecord, LocalDateTime] = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), "", new TimestampToLocalDateTimeConverter())

  /**
   * The column <code>lottery_schema.tm_lottery.modified</code>.
   */
  val MODIFIED : TableField[TmLotteryRecord, LocalDateTime] = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), "", new TimestampToLocalDateTimeConverter())

  /**
   * Create a <code>lottery_schema.tm_lottery</code> table reference
   */
  def this() = {
    this("tm_lottery", null, null)
  }

  /**
   * Create an aliased <code>lottery_schema.tm_lottery</code> table reference
   */
  def this(alias : String) = {
    this(alias, com.serinus.loto.model.jooq.tables.TmLottery.TM_LOTTERY, null)
  }

  private def this(alias : String, aliased : Table[TmLotteryRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = LotterySchema.LOTTERY_SCHEMA

  override def getIdentity : Identity[TmLotteryRecord, Integer] = {
    Keys.IDENTITY_TM_LOTTERY
  }

  override def getPrimaryKey : UniqueKey[TmLotteryRecord] = {
    Keys.TM_LOTTERY_PK
  }

  override def getKeys : List[ UniqueKey[TmLotteryRecord] ] = {
    return Arrays.asList[ UniqueKey[TmLotteryRecord] ](Keys.TM_LOTTERY_PK)
  }

  override def as(alias : String) : TmLottery = {
    new TmLottery(alias, this)
  }

  /**
   * Rename this table
   */
  def rename(name : String) : TmLottery = {
    new TmLottery(name, null)
  }
}
