/**
 * This class is generated by jOOQ
 */
package com.serinus.loto.model.jooq.tables


import com.serinus.loto.model.converters.DateToLocalDateConverter
import com.serinus.loto.model.converters.TimestampToLocalDateTimeConverter
import com.serinus.loto.model.jooq.Keys
import com.serinus.loto.model.jooq.LotterySchema
import com.serinus.loto.model.jooq.tables.records.TwResultRecord

import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.time.LocalDate
import java.time.LocalDateTime
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Identity
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import scala.Array


object TwResult {

  /**
   * The reference instance of <code>lottery_schema.tw_result</code>
   */
  val TW_RESULT = new TwResult
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.6"
  ),
  comments = "This class is generated by jOOQ"
)
class TwResult(alias : String, aliased : Table[TwResultRecord], parameters : Array[ Field[_] ]) extends TableImpl[TwResultRecord](alias, LotterySchema.LOTTERY_SCHEMA, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[TwResultRecord] = {
    classOf[TwResultRecord]
  }

  /**
   * The column <code>lottery_schema.tw_result.id</code>.
   */
  val ID : TableField[TwResultRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lottery_schema.tw_result_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), "")

  /**
   * The column <code>lottery_schema.tw_result.raffle_day</code>.
   */
  val RAFFLE_DAY : TableField[TwResultRecord, LocalDate] = createField("raffle_day", org.jooq.impl.SQLDataType.DATE.nullable(false), "", new DateToLocalDateConverter())

  /**
   * The column <code>lottery_schema.tw_result.combination_part_id</code>.
   */
  val COMBINATION_PART_ID : TableField[TwResultRecord, Integer] = createField("combination_part_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

  /**
   * The column <code>lottery_schema.tw_result.values</code>.
   */
  val VALUES : TableField[TwResultRecord, String] = createField("values", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), "")

  /**
   * The column <code>lottery_schema.tw_result.created</code>.
   */
  val CREATED : TableField[TwResultRecord, LocalDateTime] = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), "", new TimestampToLocalDateTimeConverter())

  /**
   * Create a <code>lottery_schema.tw_result</code> table reference
   */
  def this() = {
    this("tw_result", null, null)
  }

  /**
   * Create an aliased <code>lottery_schema.tw_result</code> table reference
   */
  def this(alias : String) = {
    this(alias, com.serinus.loto.model.jooq.tables.TwResult.TW_RESULT, null)
  }

  private def this(alias : String, aliased : Table[TwResultRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = LotterySchema.LOTTERY_SCHEMA

  override def getIdentity : Identity[TwResultRecord, Integer] = {
    Keys.IDENTITY_TW_RESULT
  }

  override def getPrimaryKey : UniqueKey[TwResultRecord] = {
    Keys.TW_RESULT_PK
  }

  override def getKeys : List[ UniqueKey[TwResultRecord] ] = {
    return Arrays.asList[ UniqueKey[TwResultRecord] ](Keys.TW_RESULT_PK, Keys.TW_RESULT_UK)
  }

  override def getReferences : List[ ForeignKey[TwResultRecord, _] ] = {
    return Arrays.asList[ ForeignKey[TwResultRecord, _] ](Keys.TW_RESULT__TW_RESULT_TM_COMBINATION_PART_FK)
  }

  override def as(alias : String) : TwResult = {
    new TwResult(alias, this)
  }

  /**
   * Rename this table
   */
  def rename(name : String) : TwResult = {
    new TwResult(name, null)
  }
}
